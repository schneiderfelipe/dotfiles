# See <https://github.com/leona/helix-gpt>.
[language-server.helix-gpt]
command = "bun"
args = ["run", "/home/schneider/.local/bin/helix-gpt.js", "--logFile", "/home/schneider/.cache/helix/helix-gpt.log", "--handler", "copilot"]

[language-server.efm]
command = "efm-langserver"

[[language]]
name = "toml"
language-servers = ["taplo", "helix-gpt"]

# Python configuration (see <https://github.com/helix-editor/helix/wiki/How-to-install-the-default-language-servers#python---pyright--ruff--black>)

[[language]]
name = "python"
language-servers = ["pyright", "ruff", "helix-gpt"]
auto-format = true

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

# https://github.com/helix-editor/helix/issues/1898#issuecomment-1627146829
[language-server.pyright.config.python.analysis]
typeCheckingMode = "strict"

[language-server.ruff]
command = "ruff-lsp"

[language-server.ruff.config.settings]
args = ["--ignore", "E501"]

[language.formatter]
command = "black"
args = ["--line-length", "88", "--quiet", "-"]

# Rust configuration

[[language]]
name = "rust"
language-servers = ["rust-analyzer", "helix-gpt"]

# Haskell configuration

[[language]]
name = "haskell"
formatter = { command = "stylish-haskell", args = [] }
auto-format = true

# LilyPond configuration

[[language]]
name = "lilypond"
scope = "source.lilypond"
injection-regex = "lilypond"
file-types = ["ly"]
roots = []
comment-token = "%"
language-servers = ["efm", "helix-gpt"]
indent = { tab-width = 4, unit = "    " }
formatter = { command = "ly", args = ["reformat"] }
auto-format = true

# TODO: does not work, create your own!
[[grammar]]
name = "lilypond"
source = { git = "https://github.com/nwhetsell/tree-sitter-lilypond", rev = "016d651d3983d090a7f7ef4753c87b5ed498ad0f" }

# Prettier (tested ones, see <https://github.com/helix-editor/helix/wiki/External-binary-formatter-configuration#prettier>)

[[language]]
name = "html"
formatter = { command = "prettier", args = ["--parser", "html"] }
auto-format = true

[[language]]
name = "css"
formatter = { command = "prettier", args = ["--parser", "css"] }
auto-format = true

# Prettier (untested ones, see above)

[[language]]
name = "scss"
formatter = { command = "prettier", args = ["--parser", "scss"] }
auto-format = true

[[language]]
name = "graphql"
formatter = { command = "prettier", args = ["--parser", "graphql"] }
auto-format = true

[[language]]
name = "yaml"
formatter = { command = "prettier", args = ["--parser", "yaml"] }
auto-format = true

# Prettier (untested ones, official plugins, see above)

[[language]]
name = "php"
formatter = { command = "prettier", args = ["--parser", "php"] }
auto-format = true

[[language]]
name = "ruby"
formatter = { command = "prettier", args = ["--parser", "ruby"] }
auto-format = true

[[language]]
name = "xml"
formatter = { command = "prettier", args = ["--parser", "xml"] }
auto-format = true

# Deno (tested ones, see <https://github.com/helix-editor/helix/wiki/External-binary-formatter-configuration#deno>)

[[language]]
name = "javascript"
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "js" ] }
auto-format = true
language-servers = ["typescript-language-server", "helix-gpt"]

[[language]]
name = "json"
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "json" ] }
auto-format = true

[[language]]
name = "markdown"
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "md" ] }
auto-format = true

[[language]]
name = "typescript"
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "ts" ] }
auto-format = true
language-servers = ["typescript-language-server", "helix-gpt"]

[[language]]
name = "jsx"
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "jsx" ] }
auto-format = true

[[language]]
name = "tsx"
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "tsx" ] }
auto-format = true
