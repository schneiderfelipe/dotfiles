#!/bin/bash

# Functions.
if [ -f "$HOME/.bash_functions" ]; then
  . "$HOME/.bash_functions"
fi

DROPBOX="$(jq -r '.personal.path' "$HOME/.dropbox/info.json")"
export DROPBOX

# Secrets such as API stuff, etc.
SECRETS="$DROPBOX/.secrets"
if [ -f "$SECRETS" ]; then
  # shellcheck source=/dev/null
  . "$SECRETS"
fi
unset SECRETS

# Pyenv configuration
# See <https://github.com/pyenv/pyenv#set-up-your-shell-environment-for-pyenv>.
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# pyenv shared library
export PYENV_LIB="$(pyenv prefix)/lib"
export LD_LIBRARY_PATH=$PYENV_LIB:$LD_LIBRARY_PATH

# torch/pytorch/tch-rs stuff
export LIBTORCH_USE_PYTORCH=1
export LIBTORCH="$PYENV_LIB/python3.12/site-packages/torch"
export LIBTORCH_LIB="$LIBTORCH/lib"
export LD_LIBRARY_PATH=$LIBTORCH_LIB:$LD_LIBRARY_PATH

# juliaup configuration
export PATH=$HOME/.juliaup/bin:$PATH

# You might have to change your $PATH.
# We update $PATH first, as code down the road relies on it.
export PATH=$HOME/.local/bin:$PATH

# Alda binaries
export PATH=/opt/alda:$PATH

# Path configurations for Orca
export ORCA_PATH=/opt/orca
export PATH=$ORCA_PATH:$PATH
export LD_LIBRARY_PATH=$ORCA_PATH:$LD_LIBRARY_PATH

# Path configurations for xTB
export PATH=/opt/xtb/bin:$PATH
if command -v xtb &> /dev/null && [ ! -f $ORCA_PATH/otool_xtb ]; then
  ln -s "$(which xtb)" $ORCA_PATH/otool_xtb
fi

export Multiwfnpath=/opt/Multiwfn/
export PATH=$Multiwfnpath:$PATH

# Golang
export GOPATH="$HOME/.go"
export PATH="$GOPATH/bin:/opt/go/bin:$PATH"

# Rust
export RUSTFLAGS="-C target-cpu=native"

# fnm/npm installed packages
export PATH="$HOME/.fnm:$PATH"
